class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int,int> mymap ;
        for(int i =0 ; i<nums.size() ; i++) {
            mymap[nums[i]]++ ;
            }
        priority_queue<pair<int,int>> pq ;
        vector<int> ret ;
        for(auto it=mymap.begin(); it != mymap.end() ; it++) {
            pq.push(make_pair(it->second,it->first)) ;
            if(pq.size() > mymap.size() -k) {
                ret.push_back(pq.top().second) ;
                pq.pop() ;
                
            }
        }
        return ret ;
    }
};
